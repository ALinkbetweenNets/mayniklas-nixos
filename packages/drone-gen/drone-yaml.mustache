---
kind: pipeline
type: exec
name: flake info

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
  - name: show flake show
    commands:
      - nix flake show

  - name: show flake info
    commands:
      - nix flake info

  - name: run flake checks
    commands:
      - nix flake check

trigger:
  branch:
    - main
  event:
    - push
    - cron
    - pull_request
{{#hosts}}

---
kind: pipeline
type: exec
name: build {{arch}} hosts

platform:
  os: linux
  arch: {{arch}}

clone:
  depth: 1

steps:
  - name: login into attic
    commands:
      - nix run 'github:zhaofengli/attic' -- login lounge-rocks https://cache.lounge.rocks $ATTIC_KEY --set-default
    environment:
      ATTIC_KEY:
        from_secret: attic_key

{{#machines}}
  - name: build {{name}}
    commands:
      - nix build '.#nixosConfigurations.{{name}}.config.system.build.toplevel' --out-link result-{{name}}
      - nix path-info --closure-size -h $(readlink -f result-{{name}})

{{/machines}}
  - name: Push {{arch}} hosts to attic
    commands:
{{#machines}}
      - nix run 'github:zhaofengli/attic' -- push nix-cache $(nix build --print-out-paths --no-link .#nixosConfigurations.{{name}}.config.system.build.toplevel)
{{/machines}}

  - name: Push {{arch}} hosts to cachix
    commands:
{{#machines}}
      - nix build '.#nixosConfigurations.{{name}}.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push {{cachix_name}}
{{/machines}}
    environment:
      CACHIX_AUTH_TOKEN:
        from_secret: CACHIX_AUTH_TOKEN

  - name: upload to binary cache via s3
    commands:
      - nix run 'github:mayniklas/nixos'#s3uploader
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_key
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret

trigger:
  branch:
    - main
  event:
    - cron
    - push
{{/hosts}}

{{#packages}}
---
kind: pipeline
type: exec
name: build {{arch}} flake apps

platform:
  os: linux
  arch: {{arch}}

clone:
  depth: 1

steps:
  - name: login into attic
    commands:
      - nix run 'github:zhaofengli/attic' -- login lounge-rocks https://cache.lounge.rocks $ATTIC_KEY --set-default
    environment:
      ATTIC_KEY:
        from_secret: attic_key

{{#apps}}
  - name: Build {{name}}
    commands:
      - nix build .#{{name}} --out-link result-{{name}}
      - nix path-info --closure-size -h $(readlink -f result-{{name}})

{{/apps}}
  - name: Push {{arch}} apps to attic
    commands:
{{#apps}}
      - nix run 'github:zhaofengli/attic' -- push nix-cache $(nix build --print-out-paths --no-link .#{{name}})  
{{/apps}}

  - name: Push {{arch}} apps to cachix
    commands:
{{#apps}}
      - nix build .#{{name}} --json | jq -r '.[].outputs | to_entries[].value' | cachix push {{cachix_name}}
{{/apps}}
    environment:
      CACHIX_AUTH_TOKEN:
        from_secret: CACHIX_AUTH_TOKEN

  - name: upload to binary cache via s3
    commands:
      - nix run 'github:mayniklas/nixos'#s3uploader
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_key
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret

trigger:
  branch:
    - main
  event:
    - push
    - cron

{{/packages}}
{{#hosts}}
---
kind: pipeline
type: exec
name: build hosts - {{arch}} (PR)

platform:
  os: linux
  arch: {{arch}}

clone:
  depth: 1

steps:
{{#machines}}
  - name: Build {{name}}
    commands:
      - nix build '.#nixosConfigurations.{{name}}.config.system.build.toplevel' --out-link result-{{name}}
      - nix path-info --closure-size -h $(readlink -f result-{{name}})

{{/machines}}
trigger:
  branch:
    - main
  event:
    - pull_request
{{/hosts}}
{{#packages}}

---
kind: pipeline
type: exec
name: build packages - {{arch}} (PR)

platform:
  os: linux
  arch: {{arch}}

clone:
  depth: 1

steps:
{{#apps}}
  - name: Build {{name}}
    commands:
      - nix build .#{{name}} --out-link result-{{name}}
      - nix path-info --closure-size -h $(readlink -f result-{{name}})

{{/apps}}
trigger:
  branch:
    - main
  event:
    - pull_request
{{/packages}}
