---
# nix flake show --json | jq '.nixosConfigurations | keys' | mustache drone-yaml.mustache
kind: pipeline
type: exec
name: Flake info

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: show flake info
  commands:
  - nix --experimental-features "nix-command flakes" flake show
  - nix --experimental-features "nix-command flakes" flake metadata

- name: run flake checks
  commands:
  - nix --experimental-features "nix-command flakes" flake check --show-trace

---
kind: pipeline
type: exec
name: build aida

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build aida
  commands:
  - nix build -v '.#nixosConfigurations.aida.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build deke

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build deke
  commands:
  - nix build -v '.#nixosConfigurations.deke.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build kora

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build kora
  commands:
  - nix build -v '.#nixosConfigurations.kora.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build simmons

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build simmons
  commands:
  - nix build -v '.#nixosConfigurations.simmons.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build snowflake

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build snowflake
  commands:
  - nix build -v '.#nixosConfigurations.snowflake.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build the-bus

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build the-bus
  commands:
  - nix build -v '.#nixosConfigurations.the-bus.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build the-hub

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build the-hub
  commands:
  - nix build -v '.#nixosConfigurations.the-hub.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build water-on-fire

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build water-on-fire
  commands:
  - nix build -v '.#nixosConfigurations.water-on-fire.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"

- name: show closure size
  commands:
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  - update-flake
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: Build flake apps

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
  
- name: Build owncast
  commands:
  - nix build .#owncast
  - nix path-info --closure-size -h $(readlink -f result)
  
- name: Build plexRaw
  commands:
  - nix build .#plexRaw
  - nix path-info --closure-size -h $(readlink -f result)
  
- name: Build tautulli
  commands:
  - nix build .#tautulli
  - nix path-info --closure-size -h $(readlink -f result)

trigger:
  branch:
  - main
  event:
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build flake update

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: create result-old files
  commands:
  - nix build -v '.#nixosConfigurations.aida.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result aida-old
  - nix build -v '.#nixosConfigurations.deke.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result deke-old
  - nix build -v '.#nixosConfigurations.kora.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result kora-old
  - nix build -v '.#nixosConfigurations.simmons.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result simmons-old
  - nix build -v '.#nixosConfigurations.snowflake.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result snowflake-old
  - nix build -v '.#nixosConfigurations.the-bus.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result the-bus-old
  - nix build -v '.#nixosConfigurations.the-hub.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result the-hub-old
  - nix build -v '.#nixosConfigurations.water-on-fire.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result water-on-fire-old

- name: flake update
  commands:
  - nix --experimental-features "nix-command flakes" flake update

- name: Show git diff
  commands:
  - git diff

- name: Show flake info
  commands:
  - nix --experimental-features "nix-command flakes" flake show
  - nix --experimental-features "nix-command flakes" flake metadata
  - nix --experimental-features "nix-command flakes" flake check

- name: Run flake checks
  commands:
  - nix --experimental-features "nix-command flakes" flake check --show-trace

- name: Build aida
  commands:
  - nix build -v '.#nixosConfigurations.aida.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result aida-new

- name: Build deke
  commands:
  - nix build -v '.#nixosConfigurations.deke.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result deke-new

- name: Build kora
  commands:
  - nix build -v '.#nixosConfigurations.kora.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result kora-new

- name: Build simmons
  commands:
  - nix build -v '.#nixosConfigurations.simmons.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result simmons-new

- name: Build snowflake
  commands:
  - nix build -v '.#nixosConfigurations.snowflake.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result snowflake-new

- name: Build the-bus
  commands:
  - nix build -v '.#nixosConfigurations.the-bus.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result the-bus-new

- name: Build the-hub
  commands:
  - nix build -v '.#nixosConfigurations.the-hub.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result the-hub-new

- name: Build water-on-fire
  commands:
  - nix build -v '.#nixosConfigurations.water-on-fire.config.system.build.toplevel' --option binary-caches "https://cache.lounge.rocks https://cache.nixos.org"
  - mv result water-on-fire-new

- name: Print report
  commands:
  - echo "aida:" && nix store diff-closures $(readlink -f aida-old) $(readlink -f aida-new)
  - echo "deke:" && nix store diff-closures $(readlink -f deke-old) $(readlink -f deke-new)
  - echo "kora:" && nix store diff-closures $(readlink -f kora-old) $(readlink -f kora-new)
  - echo "simmons:" && nix store diff-closures $(readlink -f simmons-old) $(readlink -f simmons-new)
  - echo "snowflake:" && nix store diff-closures $(readlink -f snowflake-old) $(readlink -f snowflake-new)
  - echo "the-bus:" && nix store diff-closures $(readlink -f the-bus-old) $(readlink -f the-bus-new)
  - echo "the-hub:" && nix store diff-closures $(readlink -f the-hub-old) $(readlink -f the-hub-new)
  - echo "water-on-fire:" && nix store diff-closures $(readlink -f water-on-fire-old) $(readlink -f water-on-fire-new)

trigger:
  branch:
  - main
  event:
  - push
  - pull_request

---
kind: pipeline
name: push flake update
type: docker

steps:
- name: Update flake.lock
  image: nixpkgs/nix-flakes
  commands:
  - nix flake update --inputs-from nixpkgs
  - nix flake show
  - nix flake metadata
  - nix flake check --show-trace
  environment:
    NIX_PATH: nixpkgs=channel:nixos-unstable

- name: Push updated flake.lock
  image: appleboy/drone-git-push
  settings:
    branch: update-flake
    remote: git@github.com:MayNiklas/nixos.git
    force: true
    commit: true
    force: true
    commit_message: "❄️ Update flake.lock"
    ssh_key:
      from_secret: deploy_key

- name: notify on failure
  image: drillster/drone-email
  settings:
    username: apikey
    from:
      from_secret: email_from
    host:
      from_secret: email_host
    password:
      from_secret: email_password
  when:
    status:
    - failure

trigger:
  branch:
  - main
  event:
  - cron
