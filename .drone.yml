---
kind: pipeline
type: exec
name: flake info

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

  - name: show flake show
    commands:
      - nix flake show

  - name: show flake info
    commands:
      - nix flake info

  - name: run flake checks
    commands:
      - nix flake check

---
kind: pipeline
type: exec
name: build amd64 hosts

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: build aida
  commands:
  - nix build '.#nixosConfigurations.aida.config.system.build.toplevel' --out-link result-aida
  - nix path-info --closure-size -h $(readlink -f result-aida)

- name: Push aida to cachix
  commands:
  - nix build '.#nixosConfigurations.aida.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build authelia
  commands:
  - nix build '.#nixosConfigurations.authelia.config.system.build.toplevel' --out-link result-authelia
  - nix path-info --closure-size -h $(readlink -f result-authelia)

- name: Push authelia to cachix
  commands:
  - nix build '.#nixosConfigurations.authelia.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build deke
  commands:
  - nix build '.#nixosConfigurations.deke.config.system.build.toplevel' --out-link result-deke
  - nix path-info --closure-size -h $(readlink -f result-deke)

- name: Push deke to cachix
  commands:
  - nix build '.#nixosConfigurations.deke.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build kora
  commands:
  - nix build '.#nixosConfigurations.kora.config.system.build.toplevel' --out-link result-kora
  - nix path-info --closure-size -h $(readlink -f result-kora)

- name: Push kora to cachix
  commands:
  - nix build '.#nixosConfigurations.kora.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build simmons
  commands:
  - nix build '.#nixosConfigurations.simmons.config.system.build.toplevel' --out-link result-simmons
  - nix path-info --closure-size -h $(readlink -f result-simmons)

- name: Push simmons to cachix
  commands:
  - nix build '.#nixosConfigurations.simmons.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build snowflake
  commands:
  - nix build '.#nixosConfigurations.snowflake.config.system.build.toplevel' --out-link result-snowflake
  - nix path-info --closure-size -h $(readlink -f result-snowflake)

- name: Push snowflake to cachix
  commands:
  - nix build '.#nixosConfigurations.snowflake.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build the-bus
  commands:
  - nix build '.#nixosConfigurations.the-bus.config.system.build.toplevel' --out-link result-the-bus
  - nix path-info --closure-size -h $(readlink -f result-the-bus)

- name: Push the-bus to cachix
  commands:
  - nix build '.#nixosConfigurations.the-bus.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build the-hub
  commands:
  - nix build '.#nixosConfigurations.the-hub.config.system.build.toplevel' --out-link result-the-hub
  - nix path-info --closure-size -h $(readlink -f result-the-hub)

- name: Push the-hub to cachix
  commands:
  - nix build '.#nixosConfigurations.the-hub.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build usb-desktop
  commands:
  - nix build '.#nixosConfigurations.usb-desktop.config.system.build.toplevel' --out-link result-usb-desktop
  - nix path-info --closure-size -h $(readlink -f result-usb-desktop)

- name: Push usb-desktop to cachix
  commands:
  - nix build '.#nixosConfigurations.usb-desktop.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: build gpu-server
  commands:
  - nix build '.#nixosConfigurations.gpu-server.config.system.build.toplevel' --out-link result-gpu-server
  - nix path-info --closure-size -h $(readlink -f result-gpu-server)

- name: Push gpu-server to cachix
  commands:
  - nix build '.#nixosConfigurations.gpu-server.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: upload to binary cache via s3
  commands:
  - nix run 'github:mayniklas/nixos'#s3uploader
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret

trigger:
  branch:
  - main
  event:
  - cron
  - push
  - pull_request

---
kind: pipeline
type: exec
name: build amd64 flake apps

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: Build build-system
  commands:
  - nix build .#build-system --out-link result-build-system
  - nix path-info --closure-size -h $(readlink -f result-build-system)

- name: Push build-system to cachix
  commands:
  - nix build .#build-system --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build drone-gen
  commands:
  - nix build .#drone-gen --out-link result-drone-gen
  - nix path-info --closure-size -h $(readlink -f result-drone-gen)

- name: Push drone-gen to cachix
  commands:
  - nix build .#drone-gen --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build s3uploader
  commands:
  - nix build .#s3uploader --out-link result-s3uploader
  - nix path-info --closure-size -h $(readlink -f result-s3uploader)

- name: Push s3uploader to cachix
  commands:
  - nix build .#s3uploader --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build vs-fix
  commands:
  - nix build .#vs-fix --out-link result-vs-fix
  - nix path-info --closure-size -h $(readlink -f result-vs-fix)

- name: Push vs-fix to cachix
  commands:
  - nix build .#vs-fix --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: upload to binary cache via s3
  commands:
  - nix run 'github:mayniklas/nixos'#s3uploader
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret

trigger:
  branch:
  - main
  event:
  - push
  - cron
  - pull_request

---
kind: pipeline
type: exec
name: build arm64 flake apps

platform:
  os: linux
  arch: arm64

clone:
  depth: 1

steps:

- name: Build build-system
  commands:
  - nix build .#build-system --out-link result-build-system
  - nix path-info --closure-size -h $(readlink -f result-build-system)

- name: Push build-system to cachix
  commands:
  - nix build .#build-system --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build drone-gen
  commands:
  - nix build .#drone-gen --out-link result-drone-gen
  - nix path-info --closure-size -h $(readlink -f result-drone-gen)

- name: Push drone-gen to cachix
  commands:
  - nix build .#drone-gen --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build s3uploader
  commands:
  - nix build .#s3uploader --out-link result-s3uploader
  - nix path-info --closure-size -h $(readlink -f result-s3uploader)

- name: Push s3uploader to cachix
  commands:
  - nix build .#s3uploader --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build update-input
  commands:
  - nix build .#update-input --out-link result-update-input
  - nix path-info --closure-size -h $(readlink -f result-update-input)

- name: Push update-input to cachix
  commands:
  - nix build .#update-input --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: Build vs-fix
  commands:
  - nix build .#vs-fix --out-link result-vs-fix
  - nix path-info --closure-size -h $(readlink -f result-vs-fix)

- name: Push vs-fix to cachix
  commands:
  - nix build .#vs-fix --json | jq -r '.[].outputs | to_entries[].value' | cachix push mayniklas
  environment:
    CACHIX_AUTH_TOKEN:
      from_secret: CACHIX_AUTH_TOKEN

- name: upload to binary cache via s3
  commands:
  - nix run 'github:mayniklas/nixos'#s3uploader
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret

trigger:
  branch:
  - main
  event:
  - push
  - cron
  - pull_request

---
kind: pipeline
type: exec
name: nix flake update - amd64

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:

- name: nix flake update
  commands:
  - nix flake update

- name: build aida
  commands:
  - nix build '.#nixosConfigurations.aida.config.system.build.toplevel' --out-link result-aida
  - nix path-info --closure-size -h $(readlink -f result-aida)

- name: build authelia
  commands:
  - nix build '.#nixosConfigurations.authelia.config.system.build.toplevel' --out-link result-authelia
  - nix path-info --closure-size -h $(readlink -f result-authelia)

- name: build deke
  commands:
  - nix build '.#nixosConfigurations.deke.config.system.build.toplevel' --out-link result-deke
  - nix path-info --closure-size -h $(readlink -f result-deke)

- name: build kora
  commands:
  - nix build '.#nixosConfigurations.kora.config.system.build.toplevel' --out-link result-kora
  - nix path-info --closure-size -h $(readlink -f result-kora)

- name: build simmons
  commands:
  - nix build '.#nixosConfigurations.simmons.config.system.build.toplevel' --out-link result-simmons
  - nix path-info --closure-size -h $(readlink -f result-simmons)

- name: build snowflake
  commands:
  - nix build '.#nixosConfigurations.snowflake.config.system.build.toplevel' --out-link result-snowflake
  - nix path-info --closure-size -h $(readlink -f result-snowflake)

- name: build the-bus
  commands:
  - nix build '.#nixosConfigurations.the-bus.config.system.build.toplevel' --out-link result-the-bus
  - nix path-info --closure-size -h $(readlink -f result-the-bus)

- name: build the-hub
  commands:
  - nix build '.#nixosConfigurations.the-hub.config.system.build.toplevel' --out-link result-the-hub
  - nix path-info --closure-size -h $(readlink -f result-the-hub)

- name: build usb-desktop
  commands:
  - nix build '.#nixosConfigurations.usb-desktop.config.system.build.toplevel' --out-link result-usb-desktop
  - nix path-info --closure-size -h $(readlink -f result-usb-desktop)

- name: build gpu-server
  commands:
  - nix build '.#nixosConfigurations.gpu-server.config.system.build.toplevel' --out-link result-gpu-server
  - nix path-info --closure-size -h $(readlink -f result-gpu-server)

trigger:
  branch:
  - main
  event:
  - cron
